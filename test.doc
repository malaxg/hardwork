一、	代码优化
1.1	问题描述
CooperationProjectsServiceImpl line:157
在某个查询页面，点击某列进行排序时，会给后台传入一个排序字段及排序规则，但是在服务器端必须要做校验，校验传入的查询字段在数据库表中是否存在
 
1.2	解决方法 todo
其实这个校验操作是必要的，可以在controller方法中参数 VO加上注解，传入一个CLASS，或者在VO类中的排序字段上用注解处理器进行验证
1.3	Controller传入VO参数时，需要进行各种验证，必填项、长度、是否重复等 todo

1.4	用工厂模式或者枚举减少if/else
注意:switch和if/else效果其实一样，所以肯定不是使用switch进行if/else优化
1.5	JDK1.8写法
1.5.1	使用.forEach()取代for循环
但是此方法不具备过滤能力，它会针对每一个对象做处理
1.5.2	使用.stream().filter()
能够对原始数据进行过滤
Example: 筛查person集合中年龄>20的所有对象并使用.collect（筛选的数据）收集至一个新的数据
List<Person> collect = people.stream().filter(o -> o.getAge() >= 20).collect(Collectors.toList());
1.5.3	使用.distinct()函数去重
需求：有一个List存的String,使用.distinct()函数去重
List<String> strings = Arrays.asList("A", "B", "B", "C", "D", "D");

List<String> collect1 = strings.stream().distinct().collect(Collectors.toList());
1.5.4	使用.map()映射成另外一个对象
传入的参数需要返回一个新的数据类型
说白了就是对原对象进行处理，返回新的对象集合
需求：对用户对象集合做映射处理，把name字段的值存入新的数组
List<String> collect2 = people.stream().map(o -> o.getName()).collect(Collectors.toList());

二、	业务逻辑
1.6	创建接口
1.7	编辑接口
1.7.1	验证必填
使用工具ParameterUtil.hasNullProperty()及类加@NotBlank注解
1.7.2	验证数据完整性(传入的数据是否在数据库中存在)
1.7.3	去除对象中所有字符串的首尾空格
1.7.4	查询编辑对象和数据中已存在的对象是否一致，如果完全相同则不更新，直接返回
1.7.5	特殊业务逻辑验证
eg1: 对象中有人员姓名和人员ID，就需要验证人员姓名和人员ID是否对应得上
1.8	查询接口
1.9	删除接口

